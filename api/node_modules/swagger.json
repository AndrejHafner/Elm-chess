{
    "swagger": "2.0",
    "info": {
        "title": "Leaderboards API",
        "description": "Manage various leaderboards for a game.",
        "version": "1.0.0"
    },
    "produces": [
        "application/json"
    ],
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/players/{id}": {
            "get": {
                "tags": ["players"],
                "description": "Returns player with specific ID",
                "x-swagger-router-controller": "players",
                "operationId": "getSinglePlayer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of player to fetch",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "player response",
                        "schema": {
                            "$ref": "#/definitions/player"
                        }
                    },
                    "404": {
                        "description": "player not found"
                    }
                }
            },
            "put": {
                "tags": ["players"],
                "description": "Update or create player with specific ID",
                "x-swagger-router-controller": "players",
                "operationId": "putPlayer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of player",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "object with properties used to modify or create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPlayer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created player successful"
                    },
                    "204": {
                        "description": "updated player successful"
                    }
                }
            }
        },
        "/players": {
            "get": {
                "tags": ["players"],
                "description": "Returns all players from the system that the user has access to",
                "x-swagger-router-controller": "players",
                "operationId": "getPlayers",
                "responses": {
                    "200": {
                        "description": "players response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/player"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["players"],
                "description": "Creates a new player.",
                "x-swagger-router-controller": "players",
                "operationId": "postPlayer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object containing player data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPlayer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response"
                    }
                }
            }
        },
        "/leaderboards": {
            "get": {
                "tags": ["leaderboards"],
                "description": "Returns all leaderboards from the system that the user has access to",
                "x-swagger-router-controller": "boards",
                "operationId": "getBoards",
                "responses": {
                    "200": {
                        "description": "leaderboards response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/leaderboard"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["leaderboards"],
                "description": "Creates a new leaderboard.",
                "x-swagger-router-controller": "boards",
                "operationId": "postBoard",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object containing leaderboard data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/leaderboard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create successful"
                    }
                }
            }
        },
        "/leaderboards/{id}": {
            "get": {
                "tags": ["leaderboards"],
                "description": "Returns leaderboard with specific ID",
                "x-swagger-router-controller": "boards",
                "operationId": "getSingleBoard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of leaderboard to fetch",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "leaderboard response",
                        "schema": {
                            "$ref": "#/definitions/leaderboard"
                        }
                    },
                    "404": {
                        "description": "leaderboard not found"
                    }
                }
            },
            "put": {
                "tags": ["leaderboards"],
                "description": "Update or create leaderboard with specific ID",
                "x-swagger-router-controller": "boards",
                "operationId": "putBoard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of leaderboard",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "object with properties used to modify or create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/leaderboard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created leaderboard successful"
                    },
                    "204": {
                        "description": "updated leaderboard successful"
                    }
                }
            }
        },
        "/leaderboards/{id}/scores": {
            "get": {
                "tags": ["leaderboards", "scores"],
                "description": "Returns all scores for the particular leaderboard",
                "x-swagger-router-controller": "scores",
                "operationId": "getScores",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of leaderboard to fetch scores from",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scores ordered by leaderboard rankDirection",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/score"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["leaderboards", "scores"],
                "description": "Submit a new score for a player to a leaderboard, if the score does not beat the previous score, it is ignored.",
                "x-swagger-router-controller": "scores",
                "operationId": "submitScore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of leaderboard to fetch scores from",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object containing score data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/score"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create successful"
                    }
                }
            }
        }
    },
    "definitions": {
        "player": {
            "type": "object",
            "required": [
                "id",
                "firstName",
                "lastName",
                "displayName"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "newPlayer": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "displayName"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "leaderboard": {
            "type": "object",
            "required": [
                "boardName",
                "rankDirection"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "boardName": {
                    "type": "string"
                },
                "rankDirection": {
                    "type": "number"
                }
            }
        },
        "score": {
            "type": "object",
            "required": [
                "score",
                "playerId"
            ],
            "properties": {
                "score": {
                    "type": "number"
                },
                "playerId": {
                    "type": "string"
                },
                "submitted": {
                    "type": "string"
                }
            }
        }
    }
}