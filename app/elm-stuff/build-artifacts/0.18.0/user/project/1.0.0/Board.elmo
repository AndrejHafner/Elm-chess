var _user$project$Board$createBoard = {
	board: A2(
		_elm_lang$core$List$map,
		function (row) {
			return A2(
				_elm_lang$core$List$map,
				function (col) {
					return {
						pos: {ctor: '_Tuple2', _0: row, _1: col},
						highlightType: {
							ctor: '::',
							_0: _user$project$Types$None,
							_1: {ctor: '[]'}
						},
						figure: {figureType: _user$project$Types$Bishop, color: _user$project$Types$Black, img_src: 'assets/rook_black.svg'}
					};
				},
				A2(_elm_lang$core$List$range, 0, 7));
		},
		A2(_elm_lang$core$List$range, 0, 7))
};
var _user$project$Board$getInitFigure = function (pos) {
	var _p0 = pos;
	_v0_18:
	do {
		switch (_p0._0) {
			case 1:
				return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Pawn);
			case 6:
				return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Pawn);
			case 0:
				switch (_p0._1) {
					case 0:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Rook);
					case 7:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Rook);
					case 1:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Knight);
					case 6:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Knight);
					case 2:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Bishop);
					case 5:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Bishop);
					case 4:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$King);
					case 3:
						return A2(_user$project$Figure$createFigure, _user$project$Types$Black, _user$project$Types$Queen);
					default:
						break _v0_18;
				}
			case 7:
				switch (_p0._1) {
					case 0:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Rook);
					case 7:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Rook);
					case 1:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Knight);
					case 6:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Knight);
					case 2:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Bishop);
					case 5:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Bishop);
					case 3:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$King);
					case 4:
						return A2(_user$project$Figure$createFigure, _user$project$Types$White, _user$project$Types$Queen);
					default:
						break _v0_18;
				}
			default:
				break _v0_18;
		}
	} while(false);
	return {figureType: _user$project$Types$Empty, color: _user$project$Types$NoColor, img_src: ''};
};
var _user$project$Board$createInitialBoard = {
	board: A2(
		_elm_lang$core$List$map,
		function (boardRow) {
			return A2(
				_elm_lang$core$List$map,
				function (square) {
					return _elm_lang$core$Native_Utils.update(
						square,
						{
							figure: _user$project$Board$getInitFigure(square.pos)
						});
				},
				boardRow);
		},
		_user$project$Board$createBoard.board)
};
