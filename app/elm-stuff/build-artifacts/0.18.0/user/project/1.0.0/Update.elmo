var _user$project$Update$updateSquareHighlight = F4(
	function (board, row, col, clickType) {
		var updateBoard = function (mapper) {
			return A2(
				_elm_lang$core$List$map,
				function (rowlist) {
					return A2(
						_elm_lang$core$List$map,
						function (square) {
							return mapper(square);
						},
						rowlist);
				},
				board.board);
		};
		var _p0 = clickType;
		if (_p0.ctor === 'FirstClick') {
			return _elm_lang$core$Native_Utils.update(
				board,
				{
					board: updateBoard(
						function (square) {
							return (_elm_lang$core$Native_Utils.eq(
								square.pos,
								{ctor: '_Tuple2', _0: row, _1: col}) && (!_elm_lang$core$Native_Utils.eq(square.highlightType, _user$project$Types$ChosenSquare))) ? _elm_lang$core$Native_Utils.update(
								square,
								{highlightType: _user$project$Types$ChosenSquare}) : _elm_lang$core$Native_Utils.update(
								square,
								{highlightType: _user$project$Types$None});
						})
				});
		} else {
			var movedSquare = A2(
				_user$project$Moves$searchSquare,
				board,
				function (square) {
					return _elm_lang$core$Native_Utils.eq(square.highlightType, _user$project$Types$ChosenSquare);
				});
			return _elm_lang$core$Native_Utils.update(
				board,
				{
					board: updateBoard(
						function (square) {
							return _elm_lang$core$Native_Utils.eq(
								square.pos,
								{ctor: '_Tuple2', _0: row, _1: col}) ? _elm_lang$core$Native_Utils.update(
								square,
								{highlightType: _user$project$Types$None, figure: movedSquare.figure}) : (_elm_lang$core$Native_Utils.eq(square.pos, movedSquare.pos) ? _elm_lang$core$Native_Utils.update(
								square,
								{
									highlightType: _user$project$Types$None,
									figure: A3(_user$project$Types$Figure, _user$project$Types$Empty, _user$project$Types$NoColor, '')
								}) : _elm_lang$core$Native_Utils.update(
								square,
								{highlightType: _user$project$Types$None}));
						})
				});
		}
	});
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SquareSelected':
				var _p3 = _p1._0;
				var _p2 = _p1._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							selectedSquare: {ctor: '_Tuple2', _0: _p3, _1: _p2},
							board: _user$project$Moves$returnPossibleMovesHighlighted(
								A4(_user$project$Update$updateSquareHighlight, model.board, _p3, _p2, _p1._2))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Highscores':
				if (_p1._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{highscores: _p1._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p5 = _p1._0._0;
					var _p4 = A2(_elm_lang$core$Debug$log, 'highscores get err', _p5);
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								errors: {ctor: '::', _0: _p5, _1: model.errors}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'GameOneStart':
				if (_p1._0.ctor === 'Ok') {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					var _p7 = _p1._0._0;
					var _p6 = A2(_elm_lang$core$Debug$log, 'highscores get err', _p7);
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								errors: {ctor: '::', _0: _p7, _1: model.errors}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
