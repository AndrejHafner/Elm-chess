var _user$project$Styles$mainMenuStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'left', _1: '0px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'top', _1: '0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(\"/src/assets/other/Background.png\")'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background-position', _1: 'center center'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Styles$highscoresStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'left', _1: '0px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'top', _1: '0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(\"/src/assets/other/Background.png\")'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background-position', _1: 'center center'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'font-size', _1: '40px'},
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Styles$mainViewStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'align-content', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(\"/src/assets/other/BackgroundBlue.png\")'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Styles$gameBoardStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'left', _1: '0px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'top', _1: '0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(\"/src/assets/other/BackgroundBlue.png\")'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background-position', _1: 'center center'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
												_1: {
													ctor: '::',
<<<<<<< HEAD
													_0: {ctor: '_Tuple2', _0: 'font-size', _1: '35px'},
=======
													_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '50px'},
>>>>>>> origin/sah-check
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Styles$chessboardStyleTwo = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '60px'},
		_1: {ctor: '[]'}
	});
var _user$project$Styles$chessboardStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '2px'},
		_1: {ctor: '[]'}
	});
var _user$project$Styles$squareSizeInt = 80;
var _user$project$Styles$squareSize = A2(
	_elm_lang$core$Basics_ops['++'],
	_elm_lang$core$Basics$toString(_user$project$Styles$squareSizeInt),
	'px');
var _user$project$Styles$squareStyle = F2(
	function (selected, isBlack) {
<<<<<<< HEAD
		var squareColor = function () {
			var _p0 = selected;
			switch (_p0.ctor) {
				case 'None':
					return isBlack ? 'rgb(192, 152, 31)' : 'rgba(192, 152, 31,0.5)';
				case 'ChosenSquare':
					return 'cyan';
				case 'PossibleMove':
					return 'blue';
				case 'SuccessfulMove':
					return 'limegreen';
				default:
					return 'rgb(155,89,182)';
			}
		}();
=======
		var squareColor = A2(_elm_lang$core$List$member, _user$project$Types$Check, selected) ? 'red' : (A2(_elm_lang$core$List$member, _user$project$Types$ChosenSquare, selected) ? 'cyan' : (A2(_elm_lang$core$List$member, _user$project$Types$PossibleMove, selected) ? 'blue' : (A2(_elm_lang$core$List$member, _user$project$Types$SuccessfulMove, selected) ? 'limegreen' : (A2(_elm_lang$core$List$member, _user$project$Types$None, selected) ? (isBlack ? 'rgb(192, 152, 31)' : 'rgba(192, 152, 31,0.5)') : 'black'))));
>>>>>>> origin/sah-check
		return _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'height', _1: _user$project$Styles$squareSize},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: _user$project$Styles$squareSize},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'border-style', _1: 'solid'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border-width', _1: '1px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background', _1: squareColor},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			});
	});
var _user$project$Styles$figureImgSizeInt = _user$project$Styles$squareSizeInt * 0.5;
var _user$project$Styles$figureImgSize = A2(
	_elm_lang$core$Basics_ops['++'],
	_elm_lang$core$Basics$toString(_user$project$Styles$figureImgSizeInt),
	'px');
var _user$project$Styles$figureMargin = A2(
	_elm_lang$core$Basics_ops['++'],
	_elm_lang$core$Basics$toString(((_user$project$Styles$squareSizeInt - _user$project$Styles$figureImgSizeInt) * 0.5) * 0.75),
	'px');
var _user$project$Styles$figureImgStyle = function (setOpacity) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: _user$project$Styles$figureImgSize},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: _user$project$Styles$figureImgSize},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'opacity', _1: setOpacity},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin', _1: _user$project$Styles$figureMargin},
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
